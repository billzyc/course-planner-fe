{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport App from 'next/app';\nimport { Provider } from 'react-redux';\nimport { CookiesProvider } from 'react-cookie';\nimport { initializeStore } from './index';\nimport { isBrowser } from '../utils/detect';\nexport var withRedux = function withRedux(PageComponent) {\n  var {\n    ssr = true\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var WithRedux = (_ref) => {\n    var {\n      initialReduxState\n    } = _ref,\n        props = _objectWithoutProperties(_ref, [\"initialReduxState\"]);\n\n    var store = getOrInitializeStore(initialReduxState);\n    return __jsx(CookiesProvider, null, __jsx(Provider, {\n      store: store\n    }, __jsx(PageComponent, props)));\n  }; // Make sure people don't use this HOC on _app.js level\n\n\n  if (false) {\n    var isAppHoc = PageComponent === App || PageComponent.prototype instanceof App;\n\n    if (isAppHoc) {\n      throw new Error('The withRedux HOC only works with PageComponents');\n    }\n  } // Set the correct displayName in development\n\n\n  if (false) {\n    var displayName = PageComponent.displayName || PageComponent.name || 'Component';\n    WithRedux.displayName = \"withRedux(\".concat(displayName, \")\");\n  }\n\n  if (ssr || PageComponent.getInitialProps) {\n    WithRedux.getInitialProps = async context => {\n      // Get or Create the store with `undefined` as initialState\n      // This allows you to set a custom default initialState\n      var reduxStore = getOrInitializeStore(); // Provide the store to getInitialProps of pages\n\n      context.reduxStore = reduxStore; // Run getInitialProps from HOCed PageComponent\n\n      var pageProps = typeof PageComponent.getInitialProps === 'function' ? await PageComponent.getInitialProps(context) : {}; // Pass props to PageComponent\n\n      return _objectSpread(_objectSpread({}, pageProps), {}, {\n        initialReduxState: reduxStore.getState()\n      });\n    };\n  }\n\n  return WithRedux;\n};\nvar reduxStore;\n\nvar getOrInitializeStore = initialState => {\n  // Always make a new store if server, otherwise state is shared between requests\n  if (!isBrowser) {\n    return initializeStore(initialState);\n  } // Create store if unavailable on the client and set it on the window object\n\n\n  if (!reduxStore) {\n    reduxStore = initializeStore(initialState);\n  }\n\n  return reduxStore;\n};","map":null,"metadata":{},"sourceType":"module"}